#!/bin/bash

inputFile=$1

# Scrape variable names and ordering
header=`grep -v ^#  $inputFile | head -1`
nCol=`echo $header | tr ',' '\n' | wc -l`
nVar=`echo $header | tr ',' '\n' | grep ^unconstrained | wc -l`

let offset=nCol-nVar

varNames=(`echo $header | tr ',' '\n' | grep ^unconstrained | sed 's,\.,_,g'`)

dataStart=`grep -nv ^# samples.csv | head -1 | sed 's,\([0-9]*\):.*,\1,'`

stepSize=`awk 'NR > '$dataStart' {print $0}' $inputFile | grep '^# step' | sed 's,# step size=,,'`
multipliers=(`awk 'NR > '$dataStart' {print $0}' $inputFile | grep '^# [0-9]' | sed 's,# ,,' | tr ',' '\n'`)

let dataStart+=5

# Prepare latex
cat latexHeader > diagnostics.tex

# Create diagnostics for each variable
i=0
while [ $i -lt $nVar ]
do
    let j=offset+i+1

    ./createDiagnostics $inputFile $j ${varNames[$i]} $dataStart

    localStepSize=$(echo "scale=5; $stepSize * ${multipliers[$i]}" | bc)
    [ "${localStepSize[0]}" != "0" ] && localStepSize="0"$localStepSize

    latexName=`echo ${varNames[$i]} | sed 's,_,\\\\\\\\\_,g'`
    sed -e 's,VARNAME,'"$latexName"',g' -e 's,IMAGENAME,'${varNames[$i]}',g' \
        -e 's,LSTEPSIZE,'$localStepSize',g' \
        -e 's,GSTEPSIZE,'$stepSize',g' -e 's,MULTIPLIER,'${multipliers[$i]}',g' \
        latexBody >> diagnostics.tex

    if [ $j -ne $nVar ]; then
        echo '\pagebreak' >> diagnostics.tex
        echo '' >> diagnostics.tex
    fi

    let ++i
done

echo '\end{document}' >> diagnostics.tex

# Compile latex
pdflatex diagnostics.tex

# Clean up
mv diagnostics.pdf temp

rm diagnostics*
rm *.eps
rm *.pdf

mv temp diagnostics.pdf
